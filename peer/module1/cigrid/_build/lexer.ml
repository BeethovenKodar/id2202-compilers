# 2 "lexer.mll"
 
  open Parser 
  exception Error of char

# 7 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\213\255\214\255\079\000\154\000\164\000\217\000\226\255\
    \013\000\020\000\002\000\077\000\080\000\239\255\241\255\242\255\
    \243\255\003\000\245\255\246\255\247\255\248\255\249\255\250\255\
    \251\255\252\255\253\255\254\255\132\000\128\000\255\255\101\000\
    \161\000\125\000\234\255\228\255\236\255\227\255\235\255\233\255\
    \230\255\229\255\053\000\054\001\055\000\057\000\134\000\183\000\
    \184\000\224\255\223\255\222\255\221\255\220\255\219\255\176\000\
    ";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\040\000\039\000\037\000\042\000\255\255\
    \024\000\023\000\030\000\018\000\017\000\255\255\255\255\255\255\
    \255\255\011\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\015\000\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\038\000\
    ";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\000\000\000\000\000\000\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\028\000\255\255\000\000\031\000\
    \032\000\031\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\255\255\
    ";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\030\000\027\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \030\000\010\000\000\000\028\000\000\000\013\000\009\000\006\000\
    \025\000\024\000\014\000\016\000\026\000\015\000\019\000\029\000\
    \005\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\040\000\018\000\012\000\017\000\011\000\039\000\
    \034\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\021\000\054\000\020\000\053\000\003\000\
    \052\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\023\000\008\000\022\000\007\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\041\000\038\000\037\000\035\000\036\000\255\255\033\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\031\000\255\255\030\000\051\000\003\000\032\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\050\000\049\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\042\000\042\000\000\000\042\000\042\000\042\000\042\000\
    \002\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\043\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \046\000\000\000\000\000\000\000\000\000\044\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\045\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\000\000\048\000\000\000\000\000\000\000\
    \000\000\000\000\047\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\255\255\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\009\000\000\000\000\000\000\000\000\000\010\000\
    \017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\042\000\000\000\044\000\000\000\
    \045\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\008\000\011\000\011\000\012\000\012\000\028\000\031\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\029\000\032\000\033\000\046\000\003\000\029\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\047\000\048\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\006\000\006\000\255\255\006\000\006\000\006\000\006\000\
    \000\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \043\000\255\255\255\255\255\255\255\255\043\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\031\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\033\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\028\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\043\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\032\000\255\255\255\255\043\000\255\255\255\255\255\255\
    \255\255\255\255\043\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 19 "lexer.mll"
        ( token lexbuf )
# 201 "lexer.ml"

  | 1 ->
# 21 "lexer.mll"
        ( Lexing.new_line lexbuf; token lexbuf )
# 206 "lexer.ml"

  | 2 ->
# 23 "lexer.mll"
        (COMMA)
# 211 "lexer.ml"

  | 3 ->
# 25 "lexer.mll"
        (LPAREN)
# 216 "lexer.ml"

  | 4 ->
# 27 "lexer.mll"
        (RPAREN)
# 221 "lexer.ml"

  | 5 ->
# 29 "lexer.mll"
        (LBRACE)
# 226 "lexer.ml"

  | 6 ->
# 31 "lexer.mll"
        (RBRACE)
# 231 "lexer.ml"

  | 7 ->
# 33 "lexer.mll"
        (LBRACKET)
# 236 "lexer.ml"

  | 8 ->
# 35 "lexer.mll"
        (RBRACKET)
# 241 "lexer.ml"

  | 9 ->
# 37 "lexer.mll"
        (POINT)
# 246 "lexer.ml"

  | 10 ->
# 39 "lexer.mll"
        (SEMI)
# 251 "lexer.ml"

  | 11 ->
# 42 "lexer.mll"
        ( EQUAL )
# 256 "lexer.ml"

  | 12 ->
# 44 "lexer.mll"
        ( PLUS )
# 261 "lexer.ml"

  | 13 ->
# 46 "lexer.mll"
        ( MIN )
# 266 "lexer.ml"

  | 14 ->
# 48 "lexer.mll"
        ( STAR)
# 271 "lexer.ml"

  | 15 ->
# 50 "lexer.mll"
        ( SLASH )
# 276 "lexer.ml"

  | 16 ->
# 52 "lexer.mll"
        ( PERCENT )
# 281 "lexer.ml"

  | 17 ->
# 54 "lexer.mll"
        ( SMALLER )
# 286 "lexer.ml"

  | 18 ->
# 56 "lexer.mll"
        ( GREATER )
# 291 "lexer.ml"

  | 19 ->
# 58 "lexer.mll"
        ( LEQ )
# 296 "lexer.ml"

  | 20 ->
# 60 "lexer.mll"
        ( GEQ )
# 301 "lexer.ml"

  | 21 ->
# 62 "lexer.mll"
        ( COMPARE )
# 306 "lexer.ml"

  | 22 ->
# 64 "lexer.mll"
        ( NEQ )
# 311 "lexer.ml"

  | 23 ->
# 66 "lexer.mll"
        ( BAND )
# 316 "lexer.ml"

  | 24 ->
# 68 "lexer.mll"
        ( BOR )
# 321 "lexer.ml"

  | 25 ->
# 70 "lexer.mll"
        ( AND )
# 326 "lexer.ml"

  | 26 ->
# 72 "lexer.mll"
        ( OR )
# 331 "lexer.ml"

  | 27 ->
# 74 "lexer.mll"
        (LSHIFT)
# 336 "lexer.ml"

  | 28 ->
# 76 "lexer.mll"
        (RSHIFT)
# 341 "lexer.ml"

  | 29 ->
# 79 "lexer.mll"
        (WIGGLE)
# 346 "lexer.ml"

  | 30 ->
# 81 "lexer.mll"
        (EXCLAM)
# 351 "lexer.ml"

  | 31 ->
# 84 "lexer.mll"
        (CHAR('\n'))
# 356 "lexer.ml"

  | 32 ->
# 86 "lexer.mll"
        (CHAR('\t'))
# 361 "lexer.ml"

  | 33 ->
# 88 "lexer.mll"
        ( CHAR('"') )
# 366 "lexer.ml"

  | 34 ->
# 90 "lexer.mll"
        (CHAR('\\'))
# 371 "lexer.ml"

  | 35 ->
# 92 "lexer.mll"
        (CHAR('\''))
# 376 "lexer.ml"

  | 36 ->
let
# 93 "lexer.mll"
                       c
# 382 "lexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 1) in
# 94 "lexer.mll"
        ( CHAR(c) )
# 386 "lexer.ml"

  | 37 ->
# 97 "lexer.mll"
        (INT(0))
# 391 "lexer.ml"

  | 38 ->
# 99 "lexer.mll"
        (raise (Error '0'))
# 396 "lexer.ml"

  | 39 ->
let
# 100 "lexer.mll"
                       lxm
# 402 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 101 "lexer.mll"
        ( INT(int_of_string lxm) )
# 406 "lexer.ml"

  | 40 ->
let
# 104 "lexer.mll"
           str
# 412 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 105 "lexer.mll"
        ( match str with
         | "break" -> BREAK 
         | "char" -> CHARTYPE
         | "delete" -> DELETE
         | "else" -> ELSE
         | "extern" -> EXTERN
        (*| "for" -> FOR*)
         | "if" -> IF
         | "int" -> INTTYPE
         (*| "new" -> NEW*)
         | "return" -> RETURN
         | "struct" -> STRUCT
         | "void" -> VOID
         | "while" -> WHILE
         | s -> IDENT(s)
        )
# 431 "lexer.ml"

  | 41 ->
# 122 "lexer.mll"
        ( EOF )
# 436 "lexer.ml"

  | 42 ->
let
# 123 "lexer.mll"
       c
# 442 "lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 124 "lexer.mll"
        ( raise (Error c) )
# 446 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

